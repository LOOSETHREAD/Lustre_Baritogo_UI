/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.LinkedList;
/**
 *
 * @author User
 */


public class newFrame extends javax.swing.JFrame {
    private LinkedList<Record> data = new LinkedList<>();
    private DefaultTableModel tableModel;
    private JTextField searchField, addField;
    private JButton addButton, deleteButton, searchButton, refreshButton;
    private JTable table;
    private int selectedRowIndex = -1;

    public newFrame() {
        setTitle("File Explorer");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1000, 1000); // Adjusted the window size

        tableModel = new DefaultTableModel();
        table = new JTable(tableModel);
        tableModel.addColumn("File Name");

        searchField = new JTextField(15);
        addField = new JTextField(15);

        addButton = new JButton("Add");
        deleteButton = new JButton("Delete");
        searchButton = new JButton("Search");
        refreshButton = new JButton("Refresh");

        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String valueToAdd = addField.getText();
                if (!valueToAdd.isEmpty()) {
                    addRecord(valueToAdd);
                    addField.setText("");
                }
            }
        });

        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                deleteSelectedRecord();
            }
        });

        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String searchValue = searchField.getText();
                if (!searchValue.isEmpty()) {
                    searchRecord(searchValue);
                }
            }
        });

        refreshButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                refreshTable();
            }
        });

        table.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = table.getSelectedRow();
                if (selectedRow != -1) {
                    selectedRowIndex = selectedRow;
                    addField.setText(data.get(selectedRowIndex).getValue());
                }
            }
        });

        JPanel panel = new JPanel();
        panel.add(new JLabel("Add File:"));
        panel.add(addField);
        panel.add(addButton);
        panel.add(new JLabel("Search File:"));
        panel.add(searchField);
        panel.add(searchButton);
        panel.add(deleteButton);
        panel.add(refreshButton);

        JScrollPane scrollPane = new JScrollPane(table);

        getContentPane().add(panel, "North");
        getContentPane().add(scrollPane);

        setLocationRelativeTo(null);
    }

    private void addRecord(String value) {
        Record record = new Record(value);
        data.add(record);
        tableModel.addRow(new Object[]{value});
    }

    private void deleteSelectedRecord() {
        if (selectedRowIndex != -1) {
            data.remove(selectedRowIndex);
            tableModel.removeRow(selectedRowIndex);
            addField.setText("");
            selectedRowIndex = -1;
        }
    }

    private void searchRecord(String searchValue) {
        tableModel.setRowCount(0); // Clear the table
        for (Record record : data) {
            if (record.getValue().toLowerCase().contains(searchValue.toLowerCase())) {
                tableModel.addRow(new Object[]{record.getValue()});
            }
        }
    }

    private void refreshTable() {
        tableModel.setRowCount(0); // Clear the table
        for (Record record : data) {
            tableModel.addRow(new Object[]{record.getValue()});
        }
        searchField.setText("");
        addField.setText("");
        selectedRowIndex = -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            // If Nimbus is not available, you can set the GUI to another look and feel
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newFrame().setVisible(true);
            }
        });
    
    }
    private class Record {
        private String value;

        public Record(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public void setValue(String value) {
            this.value = value;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


}


